{"version":3,"sources":["webpack:///./src/views/ImprovisationView.vue?21a6","webpack:///src/views/ImprovisationView.vue","webpack:///./src/views/ImprovisationView.vue?d9b7","webpack:///./src/views/ImprovisationView.vue","webpack:///./src/assets/improvisation.md"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","domProps","_s","improvisation","staticRenderFns","component","module","exports"],"mappings":"sHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,MAAM,CAACE,YAAY,YAAYC,SAAS,CAAC,UAAYP,EAAIQ,GAAGR,EAAIS,qBACjLC,EAAkB,G,qBCOtB,GACE,KADF,WAEI,MAAJ,CACM,cAAN,OCX2V,I,YCOvVC,EAAY,eACd,EACAZ,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,4BClBfC,EAAOC,QAAU","file":"js/improvisation.ed3e1bfe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('div',{staticClass:\"text-left\",domProps:{\"innerHTML\":_vm._s(_vm.improvisation)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container>\n        <div class=\"text-left\" v-html=\"improvisation\"></div>\n    </b-container>\n</template>\n\n<script>\nimport improvisation from '@/assets/improvisation.md'\nexport default {\n    data() {\n        return {\n            improvisation,\n        }\n    },\n}\n</script>\n\n<style></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImprovisationView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImprovisationView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImprovisationView.vue?vue&type=template&id=4f128a64&\"\nimport script from \"./ImprovisationView.vue?vue&type=script&lang=js&\"\nexport * from \"./ImprovisationView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = \"<h1 id=\\\"improvisation\\\">improvisation</h1>\\n<p><a href=\\\"https://docs.google.com/document/d/13rsBOM2gn2wrfxytYR4lX44I-F7GFYszXqNFa1NxZj0/edit#heading=h.fm3na4r3kd5j\\\">source doc</a></p>\\n<h2 id=\\\"petitioner--granter\\\">petitioner &amp; granter</h2>\\n<h3 id=\\\"cheatsheet\\\">cheatsheet</h3>\\n<p>When a dialogue scene starts, decide if a conflict is actually warranted.<br>Find the petitioner and granter.<br>Find what the petitioner wants—that’s what the scene is about.<br>For an NPC petitioner, pick a starting tactic.<br>For an NPC granter, respond to the PC’s starting tactic with a deflecting tactic appropriate to the character and situation.</p>\\n<p>Keep trading tactics until:</p>\\n<ul>\\n<li>The petitioner finds one that works<ul>\\n<li>End scene with victory for petitioner</li>\\n</ul>\\n</li>\\n<li>It becomes clear that no tactic will work<ul>\\n<li>End scene with loss for petitioner</li>\\n</ul>\\n</li>\\n</ul>\\n<p>As in any RPG scene, both failure and success then lead to a new scene that moves the story toward a conclusion.</p>\\n<h2 id=\\\"notes\\\">notes</h2>\\n<h3 id=\\\"common-forms-of-leverage\\\">common forms of leverage</h3>\\n<ul>\\n<li>(+) Bargaining: I have something to trade for the thing I want.</li>\\n<li>(+) Bribe: Like the above, but underhanded.</li>\\n<li>(+) Cause and Effect?: Your life will be easier if you do it (no threat)</li>\\n<li>(-) Threat: I’ll make something bad happen to you if you don’t go along. (e.g. actual Blackmail)</li>\\n<li>(-) Emotional Blackmail: You’re stuck with me, and I’ll make your life miserable if you don’t give in.</li>\\n<li>(-) Emotional Blackmail II: Nobody will ever love you but me.</li>\\n<li>( ) Love: You care about me, so you’ll do this to make me happy.</li>\\n<li>( ) Obligation: You promised you’d help me, and now I’m calling in that debt.</li>\\n<li>( ) Duty: You vowed to help people like me in this situation.</li>\\n<li>( ) Identity: If you do this, you’ll prove you’re the sort of person you think you are.</li>\\n<li>( ) Appearances: If you do this, you’ll seem like the sort of person you profess to be.</li>\\n<li>( ) Approval: If you do this, people will really like you.</li>\\n<li>( ) Respect: I have followed the rules of your social code in asking you this, and those rules say you must grant what I ask.</li>\\n<li>( ) Pleading: I have no other way of persuading you, but I really need this, please, please, please.</li>\\n</ul>\\n<h3 id=\\\"yes-and\\\">yes and</h3>\\n<ul>\\n<li>accepting an offer (saying “yes”) and building on the offer accepted (adding “and . . .”).</li>\\n<li>What you say as the character, and describe about the world and the things in it: these are all offers.</li>\\n</ul>\\n<h4 id=\\\"on-blocking-endowments\\\">on blocking endowments</h4>\\n<ul>\\n<li><strong>Player Agency</strong>: Don’t use the dice to determine something for a character that the player really doesn’t want to deal with. If she’s blocked the idea that her orc biker has a wife and kids back home, don’t roll dice to make it true. <strong>But try your best to introduce the idea somehow.</strong> For example, roll dice to figure out why somebody got the idea that the biker has a wife and kids back home.</li>\\n</ul>\\n\";"],"sourceRoot":""}